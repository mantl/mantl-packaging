#!/usr/bin/env python
import argparse
import os
import subprocess
import sys
from textwrap import dedent

def parse_args(args=None):
    parser = argparse.ArgumentParser(
        __file__,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
    )
    parser.add_argument('--port', type=int, default=80, help='port to listen on')

    parser.add_argument('--grace-time-out', type=int, default=10, help='timeout when changing backends')

    parser.add_argument('--traefik-logs-file', default='', help='log file location (stdout by default)')
    parser.add_argument('--access-logs-file', default='', help='access log file location')
    parser.add_argument('--log-level', default='ERROR', help='log level')

    parser.add_argument('--cert-file', default='', help='cert file location, for SSL')
    parser.add_argument('--key-file', default='', help='key file locaiton, for SSL')

    return parser.parse_args(args)


def get_template(port, grace_time_out, traefik_logs_file, access_logs_file, log_level, cert_file, key_file):
    return '\n'.join([
        line for line in
        [
            'port = ":{}"'.format(port),
            'graceTimeOut = {}'.format(grace_time_out),
            'traefikLogsFile = "{}"'.format(traefik_logs_file) if traefik_logs_file else 'traefikLogsFile = "/var/log/traefik/traefik.log"',
            'accessLogsFile = "{}"'.format(access_logs_file) if access_logs_file else 'accessLogsFile = "/var/log/traefik/access.log"',
            'logLevel = "{}"'.format(log_level),
            'CertFile = "{}"'.format(cert_file) if cert_file else '',
            'KeyFile = "{}"'.format(key_file) if key_file else '',
        ]
        if line != ''
    ]) + '\n'


def main(args=None):
    args = parse_args()

    fname = '/etc/traefik/global.toml'

    with open(fname, 'w') as f:
        f.write(get_template(
            args.port,
            args.grace_time_out,
            args.traefik_logs_file,
            args.access_logs_file,
            args.log_level,
            args.cert_file,
            args.key_file,
        ))

    return subprocess.call('traefik-regen')

if __name__ == '__main__':
    sys.exit(main(sys.argv))
